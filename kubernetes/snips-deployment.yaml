apiVersion: apps/v1
kind: Deployment
metadata:
  name: snips-asr
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snips-asr
  template:
    metadata:
      labels:
        app: snips-asr
    spec:
      securityContext:
        fsGroup: 99
      nodeSelector:
        snips-data: 'true'
      containers:
      - name: snips
        image: davesilva/snips:0.63.3
        imagePullPolicy: Always
        command: ['snips-asr']
        volumeMounts:
        - name: usr-share-snips
          mountPath: /usr/share/snips
        - name: config
          mountPath: /etc/snips.toml
          subPath: snips.toml
        env:
        - name: TZ
          value: 'America/New_York'
      volumes:
      - name: usr-share-snips
        hostPath:
          path: /var/lib/snips/usr-share-snips
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: snips-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snips-dialogue
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snips-dialogue
  template:
    metadata:
      labels:
        app: snips-dialogue
    spec:
      securityContext:
        fsGroup: 99
      nodeSelector:
        snips-data: 'true'
      containers:
      - name: snips
        image: davesilva/snips:0.63.3
        imagePullPolicy: Always
        command: ['snips-dialogue']
        volumeMounts:
        - name: usr-share-snips
          mountPath: /usr/share/snips
        - name: config
          mountPath: /etc/snips.toml
          subPath: snips.toml
        env:
        - name: TZ
          value: 'America/New_York'
      volumes:
      - name: usr-share-snips
        hostPath:
          path: /var/lib/snips/usr-share-snips
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: snips-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snips-hotword
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snips-hotword
  template:
    metadata:
      labels:
        app: snips-hotword
    spec:
      securityContext:
        fsGroup: 99
      nodeSelector:
        snips-data: 'true'
      containers:
      - name: snips
        image: davesilva/snips:0.63.3
        imagePullPolicy: Always
        command: ['snips-hotword']
        volumeMounts:
        - name: usr-share-snips
          mountPath: /usr/share/snips
        - name: config
          mountPath: /etc/snips.toml
          subPath: snips.toml
        env:
        - name: TZ
          value: 'America/New_York'
      volumes:
      - name: usr-share-snips
        hostPath:
          path: /var/lib/snips/usr-share-snips
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: snips-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snips-nlu
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snips-nlu
  template:
    metadata:
      labels:
        app: snips-nlu
    spec:
      securityContext:
        fsGroup: 99
      nodeSelector:
        snips-data: 'true'
      containers:
      - name: snips
        image: davesilva/snips:0.63.3
        imagePullPolicy: Always
        command: ['snips-nlu']
        volumeMounts:
        - name: usr-share-snips
          mountPath: /usr/share/snips
        - name: config
          mountPath: /etc/snips.toml
          subPath: snips.toml
        env:
        - name: TZ
          value: 'America/New_York'
      volumes:
      - name: usr-share-snips
        hostPath:
          path: /var/lib/snips/usr-share-snips
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: snips-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snips-tts
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snips-tts
  template:
    metadata:
      labels:
        app: snips-tts
    spec:
      securityContext:
        fsGroup: 99
      nodeSelector:
        snips-data: 'true'
      containers:
      - name: snips
        image: davesilva/snips:0.63.3
        imagePullPolicy: Always
        command: ['snips-tts']
        volumeMounts:
        - name: usr-share-snips
          mountPath: /usr/share/snips
        - name: config
          mountPath: /etc/snips.toml
          subPath: snips.toml
        env:
        - name: TZ
          value: 'America/New_York'
      volumes:
      - name: usr-share-snips
        hostPath:
          path: /var/lib/snips/usr-share-snips
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: snips-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snips-pegasus
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snips-pegasus
  template:
    metadata:
      labels:
        app: snips-pegasus
    spec:
      securityContext:
        fsGroup: 99
      nodeSelector:
        snips-data: 'true'
      initContainers:
      containers:
      - name: snips
        image: davesilva/snips:0.63.3
        imagePullPolicy: Always
        command: ['snips-pegasus']
        volumeMounts:
        - name: usr-share-snips
          mountPath: /usr/share/snips
        - name: var-lib-snips
          mountPath: /var/lib/snips
        - name: config
          mountPath: /etc/snips.toml
          subPath: snips.toml
        env:
        - name: TZ
          value: 'America/New_York'
      volumes:
      - name: usr-share-snips
        hostPath:
          path: /var/lib/snips/usr-share-snips
          type: DirectoryOrCreate
      - name: var-lib-snips
        hostPath:
          path: /var/lib/snips/var-lib-snips
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: snips-config
---
kind: Service
apiVersion: v1
metadata:
  name: snips-pegasus
  namespace: home-automation
spec:
  selector:
    app: snips-pegasus
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: snips-pegasus
  namespace: home-automation
spec:
  rules:
  - host: pegasus.home.dmsilva.com
    http:
      paths:
      - backend:
          serviceName: snips-pegasus
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snips-watch
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snips-watch
  template:
    metadata:
      labels:
        app: snips-watch
    spec:
      securityContext:
        fsGroup: 99
      nodeSelector:
        snips-data: 'true'
      containers:
      - &container-spec
        name: projector-room
        image: davesilva/snips:0.63.3
        imagePullPolicy: Always
        command: ['/bin/sh']
        args:
          - -c
          - >-
            snips-watch --verbose \
                        --html \
                        --dump_audio \
                        --dump_audio_site projector-room \
                        --dump_audio_path /usr/share/snips-dumps \
                        | tee -a /usr/share/snips-dumps/logs.html
        volumeMounts:
        - name: usr-share-snips
          mountPath: /usr/share/snips
        - name: dumps
          mountPath: /usr/share/snips-dumps
        - name: config
          mountPath: /etc/snips.toml
          subPath: snips.toml
        env:
        - name: TZ
          value: 'America/New_York'
      - <<: *container-spec
        name: tv-room
        args:
          - -c
          - >-
            snips-watch --verbose \
                        --html \
                        --dump_audio \
                        --dump_audio_site tv-room \
                        --dump_audio_path /usr/share/snips-dumps
      volumes:
      - name: usr-share-snips
        hostPath:
          path: /var/lib/snips/usr-share-snips
          type: DirectoryOrCreate
      - name: dumps
        hostPath:
          path: /var/lib/snips/dumps
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: snips-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: snips-config
  namespace: home-automation
data:
  snips.toml: |
    [snips-common]
    mqtt = "mosquitto:1883"

    [snips-hotword]
    sensitivity = "0.3"

    [snips-dialogue]
    sound_feedback_disabled_default = true

    [snips-pegasus]
    address = "0.0.0.0:8080"
    tls_certificate_chain = ""
    tls_private_key = ""
